name: Release

on:
  push:
    tags:
      - 'v*.*.*'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test:run

      - name: Build package
        run: pnpm build

      - name: Generate changelog
        id: changelog
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Generate changelog for this version
          if [ -f CHANGELOG.md ]; then
            # Extract changelog for current version
            sed -n "/^## \[$VERSION\]/,/^## \[/p" CHANGELOG.md | sed '$d' > current_changelog.md
          else
            echo "Release $VERSION" > current_changelog.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.changelog.outputs.version }}
          body_path: current_changelog.md
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: release
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create issue for release announcement
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.version.outputs.version }}';
            const body = `ðŸŽ‰ **Version ${version} has been released!**
            
            ## What's New
            Check out the [release notes](https://github.com/${{ github.repository }}/releases/tag/v${version}) for details.
            
            ## Installation
            \`\`\`bash
            npm install payload-plugin-mcp@${version}
            # or
            pnpm add payload-plugin-mcp@${version}
            \`\`\`
            
            ## Documentation
            - [README](https://github.com/${{ github.repository }}/blob/main/README.md)
            - [API Documentation](https://github.com/${{ github.repository }}/blob/main/docs/API_REFERENCE.md)
            
            Thank you to all contributors! ðŸš€`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ“¦ Release ${version} Published`,
              body: body,
              labels: ['release', 'announcement']
            });